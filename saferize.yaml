openapi: "3.0.0"
info:
  title: Saferize API
  version: v1
paths:
  /approval:
    post:
      operationId: initiateApproval
      summary: Initiate a new Approval
      requestBody: 
        description: The new Approval
        required: true
        content: 
          application/json: 
            schema:
              $ref: '#/components/schemas/Approval'
      responses:
        '201':
          description: |-
            Approval Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Approval'
    get:
      operationId: getApprovals
      summary: get all approvals
      responses:
        '200':
          description: Returns all approvals
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/Approval'
  /approval/{id}:
    get:
      operationId: getApprovalById
      summary: Get a single approval
      parameters:
        - name: id
          in: path
          description: The approval Id to get
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Return a single approval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Approval'
    patch:
      operationId: changeApproval
      summary: Change this approval
      requestBody:
        description: "A JsonPatch array with the fields to be changed. Current supported fields are: status, child, features"
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                $ref: '#/components/schemas/JsonPatch'
      responses:
        '200':
          description: Return the changed approval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Approval'
  /approval/token/{token}:
    get:
      operationId: getApprovalByToken
      summary: Gets an approval based on the token
      parameters:
        - name: token
          in: path
          description: The token assigned by the app to this approval
          required: true
          schema: 
            type: integer
            format: int64
      responses:
        '200':
          description: Return approval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Approval'
  /app:
    post:
      operationId: createNewApp
      summary: creates a new app
      requestBody:
        description: "The new App to create"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/App'
      responses:
        '200':
          description: The App that was just created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
  /app/{id}:
    get:
      operationId: getAppById
      summary: gets an App by Id
      parameters:
        - name: id
          in: path
          description: The App Id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Return the App
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
  /family/{id}:
    get:
      operationId: getFamilyById
      summary: Gets the Family by Id
      parameters:
        - name: id
          in: path
          description: The Family Id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Return the Family
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Family'
    put:
      operationId: updateFamily
      summary: Changes the family atttributes
      parameters:
        - name: id
          in: path
          description: The Family Id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: The changed family
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Family'
      responses:
        '200':
          description: "The changed Family"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Family'
  /family:
    post:
      operationId: createFamily
      summary: Creates a new Family
      requestBody:
        description: The new Family to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Family'
      responses:
        '201':
          description: Return the new Family
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Family'
  /family/{id}/child:
    get:
      operationId: getChildren
      summary: Get Children from this family
      parameters:
        - name: id
          in: path
          required: true
          description: The Family Id
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Returns an array of Child
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Child'
    post:
      operationId: createChild
      summary: Creates a new Child
      parameters:
        - name: id
          in: path
          required: true
          description: The Family Id
          schema:
            type: integer
            format: int64
      requestBody:
        description: The Child to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Child'
      responses:
        '201':
          description: The created Child
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Child'
  /family/{familyId}/child/{childId}:
    get:
      summary: Get one Child
      operationId: GetChildById
      parameters:
        - name: familyId
          in: path
          required: true
          description: The Family Id
          schema:
            type: integer
            format: int64
        - name: childId
          in:  path
          required: true
          description: The Child Id
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Returns the child
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Child'
  /family/{familyId}/parent:
    post:
      summary: Creates a new Parent
      parameters:
        - name: familyId
          in: path
          required: true
          description: The Family Id
          schema:
            type: integer
            format: int64
      requestBody:
        description: The Parent to be created
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/Parent'
      responses:
        '200':
          description: Returns the new Parent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parent'
  
  /family/{familyId}/parent/{parentId}:
    get:
      summary: Gets a Parent by Id
      operationId: getParentById
      parameters:
        - name: familyId
          in: path
          required: true
          description: The Family Id
          schema:
            type: integer
            format: int64
        - name: parentId
          in: path
          required: true
          description: The Parent Id
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Parent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parent'
    put:
      summary: Change the Parent
      operationId: UpdateParent
      parameters:
        - name: familyId
          in: path
          required: true
          description: The Family Id
          schema:
            type: integer
            format: int64
        - name: parentId
          in: path
          required: true
          description: The Parent Id
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: Parent that needs to be changed
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parent'
      responses:
        '200':
          description: Returns the changed Parent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parent'
  /session:
    post:
      summary: Creates a new Session
      operationId: createSession
      requestBody: 
        required: true
        description: Identifies the session to be created
        content:
          application/json:
            schema:
              properties:
                accessKey:
                  type: string
                  description: The accessKey or email for the user
                secretKey:
                  type: string
                  description: The secretKey or password for the user

      responses:
        '201':
          description: The new Session
          content:
            application/json:
              schema:
                properties:
                  token: 
                    type: string
                    description: The Session Token
                  subject:
                    type: object
                    description: The Subject (Parent) that created this session
                  signatureCode:
                    type: string
                    description: The signature to be used on subsequent calls
components:
  schemas:
    Family:
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          description: The family Id returned by the system
        name:
          type: string
          description: The family name
    App:
      properties:
        id: 
          type: integer
          format: int64
          description: The App Id returned by the system
        name:
          type: string
          description: The Name of this app
        platforms:
          type: array
          description: An array of enums that specify what platforms are supported by this app.
          items:
            enum:
              - ANDROID
              - IOS
              - WINDOWS
              - MAC_OS
              - LINUX
              - APPLE_TV
              - ANDROID_TV
              - APPLE_WATCH
              - ANDROID_WATCH
              - XBOX
              - NINTENDO
              - PLAYSTATION
        description:
          type: string
          description: A description of the App
        logo:
          type: string
          format: url
          description: The url for the logo of this app
        urlName:
          type: string
          description: The partial url name of this app on Saferize
        details:
          type: array
          description: Features that this app have.
          items:
            type: string
            enum:
              - SOCIAL_INTERACTION
              - IN_APP_PURCHASES
              - ADVERTISING
              - PAID_APP
              - SUBSCRIPTION
        email:
          type: string
          description: The app developer's email.
    Parent:
      required:
        - firstName
        - lastName
        - email
        - family
        - id
      properties:
        id:
          type: integer
          format: int64
          description: Parent's Id returned by the system
        firstName:
          type: string
          description: First Name
        lastName: 
          type: string
          description: Last Name
        mobilePhone:
          type: string
          format: phone
          description: Mobile Phone. The format should be XXXYYYZZZZ (no dashes or parenthesis)
        family:
          type: object
          $ref: '#/components/schemas/Family'
        email:
          type: string
          format: email
    Child:
      properties:
        id: 
          type: integer
          format: int64
          description: The Child Id returned by the system
        firstName:
          type: string
          description: Child's first name
        lastName:
          type: string
          description: Child's last Name
        birthDate:
          description: The childs date of birth
          type: string
          format: date
        family:
          type: object
          $ref: '#/components/schemas/Family'
        gender:
          description: The child's gender
          type: string
          enum: 
            - MALE
            - FEMALE
            - UNKNOWN
          
    AppUser:
      properties:
        id:
          type: integer
          format: int64
          description: The AppUser Id returned by the system
        appFeatures:
          type: array
          description: An array of enums that represent what features the parent allowed this user on this app.
          items:
            type: string
            enum:
              - PUSH_NOTIFICATIONS
              - DATA_COLLECTION
              - CHAT
              - LOCATION_SHARING
              - COMMENTS
              - ADVERTISING
              - IN_APP_PURCHASES
        token:
          type: string
          description: A client token for the app. This is defined by the app and should be unique per user of the app.
        app:
          type: object
          $ref: '#/components/schemas/App'
        child:
          type: object
          $ref: '#/components/schemas/Child'
        family:
          type: object
          $ref: '#/components/schemas/Family'
    Approval:
      properties:
        id: 
          type: integer
          format: int64
          description: The Approval Id returned by the system
        appUser:
          type: object
          $ref: '#/components/schemas/AppUser'
        approvalParent:
          type: object
          $ref: '#/components/schemas/Parent'
        family:
          type: object
          $ref: '#/components/schemas/Family'
        statusTime:
          type: string
          format: date-time
          description: The time and date of the last status change
        createdTime:
          type: string
          format: date-time
          description: The time and date when this approval was created
        status:
          description: The approval status
          type: string
          enum:
            - PENDING
            - NOTIFIED
            - APPROVED
            - REJECTED
        parentEmail:
          type: string
          description: The email of the parent who received this request
        parentMobilePhone:
          type: string
          description: The phone number of the parent who received this request
    JsonPatch:
      properties:
        op:
          type: string
          enum:
            - add
            - replace
            - remove
        path:
          type: string
          description: the field to be updated using JsonPath syntax
        value:
          type: object
